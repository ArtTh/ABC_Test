// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Amsterdam"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ljubljana"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Belgrade"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Zagreb"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sarajevo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Prishtina"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Rome"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Madrid"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Stockholm"
                        });
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Domain.Location", b =>
                {
                    b.HasOne("Domain.City", "City")
                        .WithOne("Location")
                        .HasForeignKey("Domain.Location", "CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
